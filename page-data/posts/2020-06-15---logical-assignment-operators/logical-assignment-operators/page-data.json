{
    "componentChunkName": "component---src-templates-post-template-post-template-tsx",
    "path": "/posts/2020-06-15---logical-assignment-operators/logical-assignment-operators",
    "result": {"data":{"markdownRemark":{"id":"8bf684aa-e75e-5a0f-ae0a-f20af6b68eb0","html":"<p>Read a fancy article from Dr. Axel Rauschmayer.</p>\n<p>He mentioned about the logical assignment Operators <code class=\"language-text\">??=</code>, <code class=\"language-text\">&amp;&amp;=</code> and <code class=\"language-text\">||=</code>.</p>\n<p>From my perspective, <code class=\"language-text\">??=</code> could be very useful than the others.</p>\n<h2 id=\"example-regarding-\" style=\"position:relative;\"><a href=\"#example-regarding-\" aria-label=\"example regarding  permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Example regarding <code class=\"language-text\">??=</code></h2>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> books <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">isbn</span><span class=\"token operator\">:</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'ECMAScript Language Specification'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">isbn</span><span class=\"token operator\">:</span> <span class=\"token string\">'456'</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// Add property .title where itâ€™s missing</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">const</span> book <span class=\"token keyword\">of</span> books<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  book<span class=\"token punctuation\">.</span>title <span class=\"token operator\">??=</span> <span class=\"token string\">'(Untitled)'</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\nassert<span class=\"token punctuation\">.</span><span class=\"token function\">deepEqual</span><span class=\"token punctuation\">(</span>\n  books<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">isbn</span><span class=\"token operator\">:</span> <span class=\"token string\">'123'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'(Untitled)'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">title</span><span class=\"token operator\">:</span> <span class=\"token string\">'ECMAScript Language Specification'</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">isbn</span><span class=\"token operator\">:</span> <span class=\"token string\">'456'</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n</code></pre></div>","fields":{"slug":"/posts/2020-06-15---logical-assignment-operators/logical-assignment-operators","tagSlugs":["/tag/frontend/","/tag/web-development/"]},"frontmatter":{"date":"2020-06-15T12:40:32.169Z","description":"","tags":["Frontend","Web Development"],"title":"Logical Assignment Operators","socialImage":""}}},"pageContext":{"slug":"/posts/2020-06-15---logical-assignment-operators/logical-assignment-operators"}},
    "staticQueryHashes": ["251939775","357378587","401334301"]}