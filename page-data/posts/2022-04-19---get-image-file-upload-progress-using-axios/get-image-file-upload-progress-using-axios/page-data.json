{
    "componentChunkName": "component---src-templates-post-template-post-template-tsx",
    "path": "/posts/2022-04-19---get-image-file-upload-progress-using-axios/get-image-file-upload-progress-using-axios",
    "result": {"data":{"markdownRemark":{"id":"89e42b8f-c72c-546f-98fd-27acdd285c5b","html":"<p>Axios is a library that makes it easy to make HTTP requests in JavaScript.</p>\n<p>We’ve got used to it for handling all kinds of HTTP requests.</p>\n<p>But Let me ask a question:\nDo you know how to get the progress of an image/file upload using Axios?</p>\n<p>Here is an example.</p>\n<p>Assuming Ant Design’s upload component is used.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Upload <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">\"antd\"</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token operator\">&lt;</span>Upload\n  accept<span class=\"token operator\">=</span><span class=\"token string\">\"image/png,image/jpeg\"</span>\n  onChange<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>changeHandler<span class=\"token punctuation\">}</span>\n  customRequest<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>customRequest<span class=\"token punctuation\">}</span>\n  fileList<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>fileList<span class=\"token punctuation\">}</span>\n  multiple<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n  showUploadList<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span>\n  beforeUpload<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span>beforeUpload<span class=\"token punctuation\">}</span>\n<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span>Label htmlFor<span class=\"token operator\">=</span><span class=\"token string\">\"uploader\"</span><span class=\"token operator\">></span><span class=\"token punctuation\">{</span>icon<span class=\"token punctuation\">}</span><span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Label<span class=\"token operator\">></span>\n<span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Upload<span class=\"token operator\">></span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The key method for the progress is <code class=\"language-text\">customRequest</code>.\nTake a look at it.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">const</span> <span class=\"token function-variable function\">customRequest</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token parameter\">options</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> <span class=\"token punctuation\">{</span> onSuccess<span class=\"token punctuation\">,</span> onError<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> onProgress <span class=\"token punctuation\">}</span> <span class=\"token operator\">=</span> options<span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> offlineId <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token function\">uuidv4</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token function\">submitMessage</span><span class=\"token punctuation\">(</span>\n    <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">SPINNER_ACTION</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token function\">getProgressText</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    offlineId<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token keyword\">const</span> config <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function-variable function\">onUploadProgress</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> loaded<span class=\"token punctuation\">,</span> total <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> percent <span class=\"token operator\">=</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">round</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>loaded <span class=\"token operator\">*</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> total<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>percent <span class=\"token operator\">!==</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token function\">onProgress</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> percent <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token function\">submitMessage</span><span class=\"token punctuation\">(</span>\n          <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">SPINNER_ACTION</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token function\">getProgressText</span><span class=\"token punctuation\">(</span>percent<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n          offlineId<span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> result <span class=\"token operator\">=</span> <span class=\"token keyword\">await</span> <span class=\"token function\">fileUploadRequest</span><span class=\"token punctuation\">(</span>file<span class=\"token punctuation\">,</span> config<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n    <span class=\"token function\">submitMessage</span><span class=\"token punctuation\">(</span>\n      <span class=\"token punctuation\">{</span> <span class=\"token literal-property property\">type</span><span class=\"token operator\">:</span> <span class=\"token constant\">SPINNER_ACTION</span><span class=\"token punctuation\">,</span> <span class=\"token literal-property property\">comment</span><span class=\"token operator\">:</span> <span class=\"token function\">getProgressText</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n      offlineId<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onSuccess</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Ok\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    result <span class=\"token operator\">&amp;&amp;</span> <span class=\"token function\">uploadSuccess</span><span class=\"token punctuation\">(</span>result<span class=\"token punctuation\">,</span> offlineId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>err<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token function\">removeMessage</span><span class=\"token punctuation\">(</span>offlineId<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">onError</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">{</span> err <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>The config object defines the progress callback and it would be used inside the Axios <code class=\"language-text\">PUT</code> request.</p>\n<div class=\"gatsby-highlight\" data-language=\"js\"><pre class=\"language-js\"><code class=\"language-js\"><span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> fileUploadRequest <span class=\"token operator\">=</span> <span class=\"token keyword\">async</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token literal-property property\">file</span><span class=\"token operator\">:</span> File<span class=\"token punctuation\">,</span>\n  <span class=\"token literal-property property\">config</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token function-variable function\">onUploadProgress</span><span class=\"token operator\">:</span> <span class=\"token parameter\">ProgressEvent</span> <span class=\"token operator\">=></span> <span class=\"token keyword\">void</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> Promise<span class=\"token operator\">&lt;</span>ResponseData<span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> res <span class=\"token operator\">=</span>\n    <span class=\"token punctuation\">(</span><span class=\"token keyword\">await</span> post<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span>\n    ResponseData <span class=\"token operator\">></span>\n    <span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">/upload_api</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n      <span class=\"token literal-property property\">folder</span><span class=\"token operator\">:</span> <span class=\"token string\">\"example\"</span><span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">,</span>\n      <span class=\"token literal-property property\">contentType</span><span class=\"token operator\">:</span> file<span class=\"token punctuation\">.</span>type<span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">then</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">res</span> <span class=\"token operator\">=></span> res<span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">await</span> Axios<span class=\"token punctuation\">.</span><span class=\"token function\">put</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">.</span>url<span class=\"token punctuation\">,</span> file<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token literal-property property\">headers</span><span class=\"token operator\">:</span> res<span class=\"token punctuation\">.</span>headers<span class=\"token punctuation\">,</span>\n    <span class=\"token operator\">...</span>config<span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n  <span class=\"token keyword\">return</span> res<span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>In this function, we create a file record first.</p>\n<p>Then we upload the file to the server.</p>\n<p>Done and happy coding.</p>\n<hr>\n<p>Spring is officially arrived.</p>\n<p>Since the weather is nice, I am going to enjoy it with my Family..</p>","fields":{"slug":"/posts/2022-04-19---get-image-file-upload-progress-using-axios/get-image-file-upload-progress-using-axios","tagSlugs":["/tag/frontend/","/tag/web-development/"]},"frontmatter":{"date":"2022-04-19T12:40:32.169Z","description":"","tags":["Frontend","Web Development"],"title":"Get Image/file Upload Progress Using Axios","socialImage":""}}},"pageContext":{"slug":"/posts/2022-04-19---get-image-file-upload-progress-using-axios/get-image-file-upload-progress-using-axios"}},
    "staticQueryHashes": ["251939775","357378587","401334301"]}