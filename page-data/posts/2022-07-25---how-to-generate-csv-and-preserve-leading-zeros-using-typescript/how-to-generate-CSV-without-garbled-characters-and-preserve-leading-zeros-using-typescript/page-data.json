{
    "componentChunkName": "component---src-templates-post-template-post-template-tsx",
    "path": "/posts/2022-07-25---how-to-generate-csv-and-preserve-leading-zeros-using-typescript/how-to-generate-CSV-without-garbled-characters-and-preserve-leading-zeros-using-typescript",
    "result": {"data":{"markdownRemark":{"id":"eb1a21b3-21e4-5137-977c-f58287040cdb","html":"<p>I’m going to share how to Generate an elegant CSV file from the Frontend side.</p>\n<p>Below use cases will be covered in this article:</p>\n<ol>\n<li>CSV file in Microsoft Excel and are seeing incorrect, or garbled characters, such a é, ü, Å, etc.</li>\n<li>Leading zeros are cut off after the CSV is generated, such as 001 to 1.</li>\n<li>TypeScript</li>\n</ol>\n<p>First of all, kudos to <a href=\"https://github.com/react-csv/react-csv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-csv</a>.\nIt supports 3 data source type: array of literal objects, array of arrays and strings\nIt is using JavaScript.</p>\n<p>I’m going to transfer it to TypeScript and only support array of literal objects.</p>\n<h3 id=\"data-and-columns\" style=\"position:relative;\"><a href=\"#data-and-columns\" aria-label=\"data and columns permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Data and Columns</h3>\n<p>These will be used for CSV’s data source and headers.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">const</span> Data<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"cc7ae7fb-4b9a-412c-97e9-6cb122374203\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"001\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"percent\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"1.6 %\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"deposit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$293.50 SGD\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"id\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"9f5fcdba-8963-4a08-b1d1-f37c04715c5b\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"type\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"002\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"deposit\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"$130.50 SGD\"</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">const</span> Columns<span class=\"token operator\">:</span> Column<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"Type\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"dataIndex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"type\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"percent\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"dataIndex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"percent\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token string-property property\">\"title\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"deposit\"</span><span class=\"token punctuation\">,</span>\n        <span class=\"token string-property property\">\"dataIndex\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"deposit\"</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span></code></pre></div>\n<h3 id=\"typescript-version-here-we-go\" style=\"position:relative;\"><a href=\"#typescript-version-here-we-go\" aria-label=\"typescript version here we go permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>TypeScript version here we go</h3>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token keyword\">interface</span> <span class=\"token class-name\">Header</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> isJsons <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>array<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">boolean</span> <span class=\"token operator\">=></span>\n  <span class=\"token builtin\">Array</span><span class=\"token punctuation\">.</span><span class=\"token function\">isArray</span><span class=\"token punctuation\">(</span>array<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;&amp;</span>\n  array<span class=\"token punctuation\">.</span><span class=\"token function\">every</span><span class=\"token punctuation\">(</span>row <span class=\"token operator\">=></span> <span class=\"token keyword\">typeof</span> row <span class=\"token operator\">===</span> <span class=\"token string\">'object'</span> <span class=\"token operator\">&amp;&amp;</span> <span class=\"token operator\">!</span><span class=\"token punctuation\">(</span>row <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\"><span class=\"token builtin\">Array</span></span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> getHeaderValue <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>property<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> obj<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> foundValue <span class=\"token operator\">=</span> property\n    <span class=\"token punctuation\">.</span><span class=\"token function\">replace</span><span class=\"token punctuation\">(</span><span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\[([^\\]]+)]</span><span class=\"token regex-delimiter\">/</span><span class=\"token regex-flags\">g</span></span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.$1'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">split</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">reduce</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">,</span> arr<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token comment\">// if at any point the nested keys passed do not exist, splice the array so it doesnt keep reducing</span>\n      <span class=\"token keyword\">const</span> value <span class=\"token operator\">=</span> o<span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">]</span>\n      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>value <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">||</span> value <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        arr<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n      <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">return</span> value\n      <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> obj<span class=\"token punctuation\">)</span>\n  <span class=\"token comment\">// if at any point the nested keys passed do not exist then looks for key `property` in object obj</span>\n  <span class=\"token keyword\">return</span> foundValue <span class=\"token operator\">===</span> <span class=\"token keyword\">undefined</span>\n    <span class=\"token operator\">?</span> property <span class=\"token keyword\">in</span> obj\n      <span class=\"token operator\">?</span> obj<span class=\"token punctuation\">[</span>property<span class=\"token punctuation\">]</span>\n      <span class=\"token operator\">:</span> <span class=\"token string\">''</span>\n    <span class=\"token operator\">:</span> foundValue\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> jsons2arrays <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  jsons<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  originalHeaders<span class=\"token operator\">:</span> Header<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>Header<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">|</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> headers <span class=\"token operator\">=</span> originalHeaders\n\n  <span class=\"token comment\">// allow headers to have custom labels, defaulting to having the header data key be the label</span>\n  <span class=\"token keyword\">let</span> headerLabels<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">let</span> headerKeys<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isJsons</span><span class=\"token punctuation\">(</span>headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    headerLabels <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>header <span class=\"token operator\">=></span> header<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span>\n    headerKeys <span class=\"token operator\">=</span> headers<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>header <span class=\"token operator\">=></span> header<span class=\"token punctuation\">.</span>dataIndex<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">const</span> data <span class=\"token operator\">=</span> jsons<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>object <span class=\"token operator\">=></span>\n    headerKeys<span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>header <span class=\"token operator\">=></span> <span class=\"token function\">getHeaderValue</span><span class=\"token punctuation\">(</span>header<span class=\"token punctuation\">,</span> object<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">)</span>\n\n  <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>headerLabels<span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>data<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> elementOrEmpty <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>element<span class=\"token operator\">:</span> <span class=\"token keyword\">undefined</span> <span class=\"token operator\">|</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">|</span> <span class=\"token constant\">T</span> <span class=\"token operator\">=></span>\n  <span class=\"token keyword\">typeof</span> element <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span> <span class=\"token operator\">||</span> element <span class=\"token operator\">===</span> <span class=\"token keyword\">null</span> <span class=\"token operator\">?</span> <span class=\"token string\">''</span> <span class=\"token operator\">:</span> element\n\n<span class=\"token keyword\">interface</span> <span class=\"token class-name\">JoinerData</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token punctuation\">[</span>key<span class=\"token operator\">:</span> <span class=\"token builtin\">number</span><span class=\"token punctuation\">]</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> joiner <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>\n  data<span class=\"token operator\">:</span> <span class=\"token builtin\">Array</span><span class=\"token operator\">&lt;</span>JoinerData<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token operator\">></span><span class=\"token punctuation\">,</span>\n  separator <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span>\n  enclosingCharacter <span class=\"token operator\">=</span> <span class=\"token string\">'\"'</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> data\n    <span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span>e <span class=\"token operator\">=></span> e<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>row <span class=\"token operator\">=></span>\n      row\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>element <span class=\"token operator\">=></span> <span class=\"token function\">elementOrEmpty</span><span class=\"token punctuation\">(</span>element<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">map</span><span class=\"token punctuation\">(</span>column <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n          <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>Number<span class=\"token punctuation\">.</span><span class=\"token function\">isNaN</span><span class=\"token punctuation\">(</span><span class=\"token function\">parseInt</span><span class=\"token punctuation\">(</span>column <span class=\"token keyword\">as</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>enclosingCharacter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>column<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>enclosingCharacter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n          <span class=\"token punctuation\">}</span>\n\n          <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>enclosingCharacter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>column<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>enclosingCharacter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>separator<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span><span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">\\n</span><span class=\"token template-punctuation string\">`</span></span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> jsons2csv <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  data<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  headers<span class=\"token operator\">:</span> Header<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  separator <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span>\n  enclosingCharacter <span class=\"token operator\">=</span> <span class=\"token string\">'\"'</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token function\">joiner</span><span class=\"token punctuation\">(</span><span class=\"token function\">jsons2arrays</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> separator<span class=\"token punctuation\">,</span> enclosingCharacter<span class=\"token punctuation\">)</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> toCSV <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  data<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  headers<span class=\"token operator\">:</span> Header<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  separator <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span>\n  enclosingCharacter <span class=\"token operator\">=</span> <span class=\"token string\">'\"'</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token function\">isJsons</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token function\">jsons2csv</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">,</span> separator<span class=\"token punctuation\">,</span> enclosingCharacter<span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n\n  <span class=\"token keyword\">throw</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Error</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">const</span> buildURI <span class=\"token operator\">=</span> <span class=\"token operator\">&lt;</span><span class=\"token constant\">T</span><span class=\"token operator\">></span><span class=\"token punctuation\">(</span>\n  data<span class=\"token operator\">:</span> <span class=\"token constant\">T</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  headers<span class=\"token operator\">:</span> Header<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n  uFEFF <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n  separator <span class=\"token operator\">=</span> <span class=\"token string\">','</span><span class=\"token punctuation\">,</span>\n  enclosingCharacter <span class=\"token operator\">=</span> <span class=\"token string\">'\"'</span>\n<span class=\"token punctuation\">)</span><span class=\"token operator\">:</span> <span class=\"token builtin\">string</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> csv <span class=\"token operator\">=</span> <span class=\"token function\">toCSV</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> headers<span class=\"token punctuation\">,</span> separator<span class=\"token punctuation\">,</span> enclosingCharacter<span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> type <span class=\"token operator\">=</span> <span class=\"token string\">'text/csv'</span>\n  <span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>uFEFF <span class=\"token operator\">?</span> <span class=\"token string\">'\\uFEFF'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> csv<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span>\n  <span class=\"token keyword\">const</span> dataURI <span class=\"token operator\">=</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">data:</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span><span class=\"token keyword\">type</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\">;charset=utf-8,</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>uFEFF <span class=\"token operator\">?</span> <span class=\"token string\">'\\uFEFF'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>csv<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n\n  <span class=\"token keyword\">const</span> <span class=\"token constant\">URL</span> <span class=\"token operator\">=</span> window<span class=\"token punctuation\">.</span><span class=\"token constant\">URL</span> <span class=\"token operator\">||</span> window<span class=\"token punctuation\">.</span>webkitURL\n\n  <span class=\"token keyword\">return</span> <span class=\"token keyword\">typeof</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span>createObjectURL <span class=\"token operator\">===</span> <span class=\"token string\">'undefined'</span>\n    <span class=\"token operator\">?</span> dataURI\n    <span class=\"token operator\">:</span> <span class=\"token constant\">URL</span><span class=\"token punctuation\">.</span><span class=\"token function\">createObjectURL</span><span class=\"token punctuation\">(</span>blob<span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">}</span>\n</code></pre></div>\n<h3 id=\"key-points\" style=\"position:relative;\"><a href=\"#key-points\" aria-label=\"key points permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Key points</h3>\n<ol>\n<li>Resolve garbled characters issue.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// In buildURI function</span>\n<span class=\"token keyword\">const</span> blob <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Blob</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>uFEFF <span class=\"token operator\">?</span> <span class=\"token string\">'\\uFEFF'</span> <span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> csv<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">{</span> type <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<ol start=\"2\">\n<li>Resolve leading zeros are cut off issue.</li>\n</ol>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\"><span class=\"token comment\">// joiner</span>\n<span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token string\">=</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>enclosingCharacter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>column<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>enclosingCharacter<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span></code></pre></div>\n<h3 id=\"generate-csv-action\" style=\"position:relative;\"><a href=\"#generate-csv-action\" aria-label=\"generate csv action permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Generate CSV action</h3>\n<p><code class=\"language-text\">clickHandler</code> should be tied to a button’s click event or other actions.\nIt would generate a CSV file and download it in a new tab.\n<code class=\"language-text\">message</code> is not required here. It could be replaced with other component library.</p>\n<div class=\"gatsby-highlight\" data-language=\"typescript\"><pre class=\"language-typescript\"><code class=\"language-typescript\">  <span class=\"token keyword\">const</span> <span class=\"token function-variable function\">clickHandler</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>data<span class=\"token operator\">:</span> Datum<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> columns<span class=\"token operator\">:</span> Column<span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> filename<span class=\"token operator\">:</span> <span class=\"token builtin\">string</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">{</span>\n      <span class=\"token keyword\">const</span> href <span class=\"token operator\">=</span> <span class=\"token function\">buildURI</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">,</span> columns<span class=\"token punctuation\">)</span>\n      <span class=\"token keyword\">const</span> downloadLink <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token punctuation\">)</span>\n\n      downloadLink<span class=\"token punctuation\">.</span>download <span class=\"token operator\">=</span> filename\n      downloadLink<span class=\"token punctuation\">.</span>href <span class=\"token operator\">=</span> href\n      downloadLink<span class=\"token punctuation\">.</span>target <span class=\"token operator\">=</span> <span class=\"token string\">'_blank'</span>\n      downloadLink<span class=\"token punctuation\">.</span>style<span class=\"token punctuation\">.</span>display <span class=\"token operator\">=</span> <span class=\"token string\">'none'</span>\n\n      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>downloadLink<span class=\"token punctuation\">)</span>\n      downloadLink<span class=\"token punctuation\">.</span><span class=\"token function\">click</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n      document<span class=\"token punctuation\">.</span>body<span class=\"token punctuation\">.</span><span class=\"token function\">removeChild</span><span class=\"token punctuation\">(</span>downloadLink<span class=\"token punctuation\">)</span>\n\n      message<span class=\"token punctuation\">.</span><span class=\"token function\">success</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Successfully generate CSV file.'</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      message<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>message<span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span></code></pre></div>\n<h3 id=\"advanced-references\" style=\"position:relative;\"><a href=\"#advanced-references\" aria-label=\"advanced references permalink\" class=\"anchor before\"><svg aria-hidden=\"true\" focusable=\"false\" height=\"16\" version=\"1.1\" viewBox=\"0 0 16 16\" width=\"16\"><path fill-rule=\"evenodd\" d=\"M4 9h1v1H4c-1.5 0-3-1.69-3-3.5S2.55 3 4 3h4c1.45 0 3 1.69 3 3.5 0 1.41-.91 2.72-2 3.25V8.59c.58-.45 1-1.27 1-2.09C10 5.22 8.98 4 8 4H4c-.98 0-2 1.22-2 2.5S3 9 4 9zm9-3h-1v1h1c1 0 2 1.22 2 2.5S13.98 12 13 12H9c-.98 0-2-1.22-2-2.5 0-.83.42-1.64 1-2.09V6.25c-1.09.53-2 1.84-2 3.25C6 11.31 7.55 13 9 13h4c1.45 0 3-1.69 3-3.5S14.5 6 13 6z\"></path></svg></a>Advanced References</h3>\n<ul>\n<li><a href=\"https://github.com/react-csv/react-csv\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">react-csv</a>.</li>\n</ul>","fields":{"slug":"/posts/2022-07-25---how-to-generate-csv-and-preserve-leading-zeros-using-typescript/how-to-generate-CSV-without-garbled-characters-and-preserve-leading-zeros-using-typescript","tagSlugs":["/tag/frontend/","/tag/typescript/","/tag/csv/"]},"frontmatter":{"date":"2022-07-22T12:40:32.169Z","description":"","tags":["Frontend","TypeScript","CSV"],"title":"How to generate CSV without garbled characters and preserve leading zeros using TypeScript","socialImage":""}}},"pageContext":{"slug":"/posts/2022-07-25---how-to-generate-csv-and-preserve-leading-zeros-using-typescript/how-to-generate-CSV-without-garbled-characters-and-preserve-leading-zeros-using-typescript"}},
    "staticQueryHashes": ["251939775","357378587","401334301"]}